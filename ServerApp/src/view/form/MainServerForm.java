/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view.form;

import controller.Controller;
import domain.UserProfile;
import java.awt.Color;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import thread.ServerThread;
import view.components.LoggedInUsersTableModel;
import thread.ClientThread;
import thread.LoggedInUsersThread;

/**
 *
 * @author PC
 */
public class MainServerForm extends javax.swing.JFrame {

    private ServerThread server;

    /**
     * Creates new form MainServerForm
     */
    public MainServerForm() {
        initComponents();
        setLocationRelativeTo(null);
        prepareForm();
        fillTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnStartServer = new javax.swing.JButton();
        btnStopServer = new javax.swing.JButton();
        lblServerStatus = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLoggedInUsers = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Server ");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        btnStartServer.setText("Pokreni server");
        btnStartServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartServerActionPerformed(evt);
            }
        });

        btnStopServer.setText("Zaustavi server");
        btnStopServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopServerActionPerformed(evt);
            }
        });

        lblServerStatus.setText("Server je iskljucen");

        tblLoggedInUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Korisnicko ime"
            }
        ));
        jScrollPane1.setViewportView(tblLoggedInUsers);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(btnStartServer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnStopServer)
                .addGap(46, 46, 46))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(192, 192, 192)
                .addComponent(lblServerStatus)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStartServer)
                    .addComponent(btnStopServer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblServerStatus)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartServerActionPerformed
        if (server == null || !server.isAlive()) {
            try {
                server = new ServerThread();
                server.start();
                lblServerStatus.setText("Server je ukljucen");
                btnStartServer.setEnabled(false);
                btnStopServer.setEnabled(true);
                LoggedInUsersThread thread = new LoggedInUsersThread(server, this);
                thread.start();
            } catch (IOException ex) {
                Logger.getLogger(MainServerForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Server je vec pokrenut!", "Upozorenje", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnStartServerActionPerformed

    private void btnStopServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopServerActionPerformed
        if (server.getServerSocket() != null) {
            try {
                Controller controller = new Controller();
                List<ClientThread> clients = server.getClients();
                server.getServerSocket().close();
                lblServerStatus.setText("Server je iskljucen");
                btnStartServer.setEnabled(true);
                btnStopServer.setEnabled(false);
            } catch (IOException ex) {
                Logger.getLogger(MainServerForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
//        if (server.getClients() != null) {
//            try {
//                List<ClientThread> clients = server.getClients();
//                for (ClientThread client : clients) {
//                    if (client != null) {
//                        client.getClientSocket().close();
//                        client.setIsSocketOpen(false);
//                    }
//                }
//                lblServerStatus.setText("Server je iskljucen");
//                btnStartServer.setEnabled(false);
//                btnStopServer.setEnabled(true);
//            } catch (IOException ex) {
//                Logger.getLogger(MainServerForm.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        }
    }//GEN-LAST:event_btnStopServerActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnStartServer;
    private javax.swing.JButton btnStopServer;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblServerStatus;
    private javax.swing.JTable tblLoggedInUsers;
    // End of variables declaration//GEN-END:variables

    private void prepareForm() {
        btnStopServer.setEnabled(false);
    }

    private void fillTable() {

    }

    public void reloadLoggedAdmins(List<UserProfile> users) {
        tblLoggedInUsers.setModel(new LoggedInUsersTableModel(users));
    }
}
