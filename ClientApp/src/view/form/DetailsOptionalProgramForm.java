/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view.form;

import domain.Attendance;
import domain.Child;
import domain.OptionalProgram;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import view.components.SelectChildTableModel;
import view.components.SpecificOptionalProgramTableModel;
import uicontroller.Controller;

/**
 *
 * @author PC
 */
public class DetailsOptionalProgramForm extends javax.swing.JDialog {

    private OptionalProgram optionalProgram;

    public DetailsOptionalProgramForm(java.awt.Frame parent, boolean modal, OptionalProgram optionalProgram) {
        super(parent, modal);
        initComponents();
        this.optionalProgram = optionalProgram;
        setLocationRelativeTo(null);
        prepareTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroup = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAttendances = new javax.swing.JTable();
        rbEndDateNotNull = new javax.swing.JRadioButton();
        rbNullEndDate = new javax.swing.JRadioButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        btnQuit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Detalji");

        tblAttendances.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblAttendances);

        btnGroup.add(rbEndDateNotNull);
        rbEndDateNotNull.setText("Ispisana sa pohadjanja");
        rbEndDateNotNull.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbEndDateNotNullActionPerformed(evt);
            }
        });

        btnGroup.add(rbNullEndDate);
        rbNullEndDate.setText("Pohadjanje u toku");
        rbNullEndDate.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rbNullEndDateStateChanged(evt);
            }
        });
        rbNullEndDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNullEndDateActionPerformed(evt);
            }
        });

        btnGroup.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Sva pohadjanja");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        btnQuit.setText("Ispisi dete");
        btnQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnQuit)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbEndDateNotNull)
                            .addComponent(rbNullEndDate)
                            .addComponent(jRadioButton1))
                        .addGap(469, 469, 469)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbNullEndDate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbEndDateNotNull)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnQuit)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbEndDateNotNullActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbEndDateNotNullActionPerformed
        List<Attendance> attendances = new ArrayList<>();
        try {
            Attendance a = new Attendance();
            a.setOptionalProgram(optionalProgram);
            a.setEndDate(java.sql.Date.valueOf(LocalDate.now()));
            attendances = Controller.getInstance().getAttendanceNotNullEndDate(a);
            SpecificOptionalProgramTableModel tm = (SpecificOptionalProgramTableModel) tblAttendances.getModel();
            tm.refreschTable(attendances);
        } catch (IOException ex) {
            ex.printStackTrace();
            System.out.println("Greska pri ucitavanju liste pohadjanja");
        } catch (Exception ex) {
            Logger.getLogger(DetailsOptionalProgramForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_rbEndDateNotNullActionPerformed

    private void rbNullEndDateStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rbNullEndDateStateChanged

    }//GEN-LAST:event_rbNullEndDateStateChanged

    private void rbNullEndDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbNullEndDateActionPerformed
        List<Attendance> attendances = new ArrayList<>();
        try {
            Attendance a = new Attendance();
            a.setOptionalProgram(optionalProgram);
            a.setStartDate(java.sql.Date.valueOf(LocalDate.now()));
            attendances = Controller.getInstance().getAttendanceNullEndDate(a);
            SpecificOptionalProgramTableModel tm = (SpecificOptionalProgramTableModel) tblAttendances.getModel();
            tm.refreschTable(attendances);
        } catch (IOException ex) {
            ex.printStackTrace();
            System.out.println("Greska pri ucitavanju liste pohadjanja");
        } catch (Exception ex) {
            Logger.getLogger(DetailsOptionalProgramForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_rbNullEndDateActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        prepareTable();
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void btnQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitActionPerformed
        if (tblAttendances.getSelectedRowCount() != 1) {
            JOptionPane.showMessageDialog(this, "Morate selektovati tacno jednan izborni program", "Upozorenje", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int selectedRow = tblAttendances.getSelectedRow();
            SpecificOptionalProgramTableModel soptm = (SpecificOptionalProgramTableModel) tblAttendances.getModel();
            Attendance attendance = soptm.getAttendance(selectedRow);
            int answer = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da ispisete " + attendance.getChild().getFirstname() + " " + attendance.getChild().getLastname() + " sa izbornog programa " + attendance.getOptionalProgram().getName() + "?", "Upozorenje", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (answer == JOptionPane.YES_OPTION) {
                if (attendance.getEndDate() == null) {
                    try {
                        attendance.setEndDate(java.sql.Date.valueOf(LocalDate.now()));
                        Controller.getInstance().quitAttendance(attendance);
                        JOptionPane.showMessageDialog(this, "Dete " + attendance.getChild().getFirstname() + " " + attendance.getChild().getLastname() + " je uspesno ispisano sa izbornog programa " + attendance.getOptionalProgram().getName(), "Obavestenje", JOptionPane.INFORMATION_MESSAGE);
                        SpecificOptionalProgramTableModel tm = (SpecificOptionalProgramTableModel) tblAttendances.getModel();
                        tm.fireTableDataChanged();
                    } catch (Exception ex) {
                        ex.printStackTrace();
                        JOptionPane.showMessageDialog(this, "Greska pri ispisivanju deteta", "Upozorenje", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Dete je vec ispisano sa izbornog programa", "Upozorenje", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btnQuitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btnGroup;
    private javax.swing.JButton btnQuit;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbEndDateNotNull;
    private javax.swing.JRadioButton rbNullEndDate;
    private javax.swing.JTable tblAttendances;
    // End of variables declaration//GEN-END:variables

    private void prepareTable() {
        List<Attendance> attendances = new ArrayList<>();
        try {
            Attendance a = new Attendance();
            a.setOptionalProgram(optionalProgram);
            a.setStartDate(java.sql.Date.valueOf(LocalDate.now()));
            a.setEndDate(java.sql.Date.valueOf(LocalDate.now()));
            attendances = Controller.getInstance().getAttendancesByOptionalProgram(a);
            SpecificOptionalProgramTableModel tm = new SpecificOptionalProgramTableModel(attendances);
            tblAttendances.setModel(tm);
        } catch (IOException ex) {
            ex.printStackTrace();
            System.out.println("Greska pri ucitavanju liste pohadjanja");

        } catch (Exception ex) {
            Logger.getLogger(DetailsOptionalProgramForm.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

    }
}
