/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view.form;

import domain.Child;
import view.form.util.Mode;
import domain.Parent;
import domain.UserStatus;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeFormatterBuilder;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import view.components.ChildrenTableModel;
import view.components.UserProfileTableModel;
import uicontroller.Controller;

/**
 *
 * @author PC
 */
public class EditChildForm extends javax.swing.JDialog {

    private Child child;
    private JTable tblChildren;
    private int mode;
    

    /**
     * Creates new form EditChildForm
     */
    public EditChildForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
    }

    public EditChildForm(java.awt.Frame parent, boolean modal, Child child, JTable tblChildren, int mode) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        this.child = child;
        this.tblChildren = tblChildren;
        this.mode = mode;
        prepareFields();
        fillCombobox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbParent = new javax.swing.JComboBox<>();
        txtLastname = new javax.swing.JTextField();
        txtFirstname = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        dcBirthday = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        txtJmbg = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Izmeni dete");

        jLabel1.setText("Ime");

        jLabel2.setText("Prezime");

        jLabel3.setText("Datum rodjenja");

        jLabel4.setText("Roditelj");

        cbParent.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtLastname.setText("jTextField2");

        txtFirstname.setText("jTextField3");
        txtFirstname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFirstnameActionPerformed(evt);
            }
        });

        btnSave.setText("Sacuvaj");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel5.setText("JMBG");

        txtJmbg.setText("jTextField1");

        jButton1.setText("Otkazi");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbParent, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtLastname)
                            .addComponent(dcBirthday, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                            .addComponent(txtJmbg)
                            .addComponent(txtFirstname, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(txtFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtLastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(dcBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbParent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtJmbg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFirstnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFirstnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstnameActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (mode == Mode.EDIT) {
            try {
                if (validation()) {
                    int answer = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da izmenite dete " + child.getFirstname() + " " + child.getLastname() + "?", "Upozorenje", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                    if (answer == JOptionPane.YES_OPTION) {
                        Child editedChild = new Child(child.getId(), txtFirstname.getText(), txtLastname.getText(), dcBirthday.getDate(), (Parent) cbParent.getSelectedItem(), Long.valueOf(txtJmbg.getText()));
                        ChildrenTableModel ctm = (ChildrenTableModel) tblChildren.getModel();
                        ctm.refreshTable(editedChild);
                        dispose();
                    }
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Upozorenje", JOptionPane.ERROR_MESSAGE);
            }
        }
        if(mode==Mode.DELETE){
             int answer = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da obrisete dete " + child.getFirstname() + " " + child.getLastname() + "?", "Upozorenje", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (answer == JOptionPane.YES_OPTION) {
                    ChildrenTableModel ctm = (ChildrenTableModel) tblChildren.getModel();
                    ctm.removeFromTable(child);
                    dispose();
                }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<Object> cbParent;
    private com.toedter.calendar.JDateChooser dcBirthday;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtFirstname;
    private javax.swing.JTextField txtJmbg;
    private javax.swing.JTextField txtLastname;
    // End of variables declaration//GEN-END:variables

    private void prepareFields() {
        txtFirstname.setText(child.getFirstname());
        txtLastname.setText(child.getLastname());
        dcBirthday.setDate(child.getBirthday());
        txtJmbg.setText(child.getJmbg().toString());
        if (mode == Mode.DELETE) {
            txtFirstname.setEnabled(false);
            txtJmbg.setEnabled(false);
            txtLastname.setEnabled(false);
            dcBirthday.setEnabled(false);
            cbParent.setEnabled(false);
            btnSave.setText("Obrisi");
        }
        if (mode == Mode.EDIT) {
            btnSave.setText("Sacuvaj");
        }
    }

    private void fillCombobox() {
        cbParent.removeAllItems();
        try {
            List<Parent> parents = Controller.getInstance().getAllParents();
            for (Parent parent : parents) {
                cbParent.addItem(parent);
            }
            cbParent.setSelectedItem(child.getParent());

        } catch (Exception ex) {
            ex.printStackTrace();
            System.out.println("Greska pri ucitavanju liste roditelja");
        }
    }

    private boolean validation() throws Exception {
        String firstname = txtFirstname.getText().trim();
        String lastname = txtLastname.getText().trim();
        String JMBG = txtJmbg.getText().trim();
        if (firstname.isEmpty() || JMBG.isEmpty() || lastname.isEmpty() || cbParent.getSelectedItem() == null || dcBirthday.getDate() == null) {
            throw new Exception("Nevalidan unos, odredjena polja su prazna.");
        }
        for (int i = 0; i < firstname.length(); i++) {
            if (!Character.isLetter(firstname.charAt(i)) && firstname.charAt(i) != ' ') {
                throw new Exception("Nevalidan unos, ime se moze sastojati iskljucivo od slova.");
            }
        }
        for (int i = 0; i < lastname.length(); i++) {
            if (!Character.isLetter(lastname.charAt(i)) && lastname.charAt(i) != ' ') {
                throw new Exception("Nevalidan unos, prezime se moze sastojati iskljucivo od slova.");
            }
        }
        for (int i = 0; i < JMBG.length(); i++) {
            if (!Character.isDigit(JMBG.charAt(i))) {
                throw new Exception("Nevalidan unos, JMBG se moze sastojati iskljucivo od brojeva.");
            }
        }
        if (firstname.length() > 30 || lastname.length() > 30) {
            throw new Exception("Nevalidan unos, maksimalan broj karaktera za ime i prezime je 30.");
        }
        if (JMBG.length() != 13) {
            throw new Exception("Nevalidan unos, JMBG mora imati tacno 13 cifara.");
        }
        return true;
    }

}
