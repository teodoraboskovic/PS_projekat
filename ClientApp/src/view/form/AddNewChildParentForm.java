/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view.form;

import domain.Child;
import domain.Parent;
import java.awt.Rectangle;
import java.io.IOException;
import java.time.Instant;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import uicontroller.Controller;

/**
 *
 * @author PC
 */
public class AddNewChildParentForm extends javax.swing.JDialog {

    private Parent childParent;

    /**
     * Creates new form AddNewChildParentForm
     */
    public AddNewChildParentForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        prepareForm();
        childParent = new Parent();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtFirstname = new javax.swing.JTextField();
        txtLastname = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtJMBGParent = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtFirstnameParent = new javax.swing.JTextField();
        txtLastnameParent = new javax.swing.JTextField();
        txtAdressParent = new javax.swing.JTextField();
        txtPhoneNumberParent = new javax.swing.JTextField();
        cbCreateNewParent = new javax.swing.JCheckBox();
        txtJMBG = new javax.swing.JTextField();
        dcBirthday = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Dete");

        jLabel1.setText("Ime:");

        jLabel2.setText("Prezime:");

        jLabel3.setText("Datum rodjenja:");

        jLabel5.setText("JMBG:");

        txtFirstname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFirstnameActionPerformed(evt);
            }
        });

        txtLastname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLastnameActionPerformed(evt);
            }
        });

        btnSave.setText("Sacuvaj");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setText("Otkazi");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Roditelj:"));

        jLabel4.setText("JMBG:");

        btnSearch.setText("Pretrazi u bazi");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jLabel6.setText("Ime:");

        jLabel7.setText("Prezime:");

        jLabel8.setText("Adresa:");

        jLabel9.setText("Broj telefona:");

        txtFirstnameParent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFirstnameParentActionPerformed(evt);
            }
        });

        txtLastnameParent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLastnameParentActionPerformed(evt);
            }
        });

        txtAdressParent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAdressParentActionPerformed(evt);
            }
        });

        txtPhoneNumberParent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneNumberParentActionPerformed(evt);
            }
        });

        cbCreateNewParent.setText("Kreiraj novog roditelja");
        cbCreateNewParent.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cbCreateNewParentStateChanged(evt);
            }
        });
        cbCreateNewParent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCreateNewParentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtAdressParent, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                            .addComponent(txtLastnameParent, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtFirstnameParent, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtJMBGParent, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtPhoneNumberParent)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSearch, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cbCreateNewParent, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(4, 4, 4))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtJMBGParent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFirstnameParent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtLastnameParent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtAdressParent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtPhoneNumberParent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(cbCreateNewParent))
        );

        txtJMBG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJMBGActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtLastname, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(dcBirthday, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtJMBG, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)))
                .addGap(22, 22, 22))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancel)
                        .addGap(6, 6, 6))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtLastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(dcBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtJMBG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFirstnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFirstnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstnameActionPerformed

    private void txtLastnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLastnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastnameActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        int answer = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da sacuvate dete sa dodeljenim roditeljem u bazi?", "Upozorenje", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (answer == JOptionPane.YES_OPTION) {
            if (cbCreateNewParent.isSelected()) {
//                childParent = saveParent(childParent);
//                if (childParent != null) {
//                    saveChild(childParent);
//                }
                try {
                    if (validationParent(txtFirstnameParent.getText().trim(), txtLastnameParent.getText().trim(), txtPhoneNumberParent.getText().trim(), txtAdressParent.getText().trim(), txtJMBGParent.getText().trim())
                            && validationChild(txtFirstname.getText().trim(), txtLastname.getText().trim(), dcBirthday.getDate(), txtJMBG.getText().trim())) {
                        try {
                            String firstname = txtFirstnameParent.getText().trim();
                            String lastname = txtLastnameParent.getText().trim();
                            Long phoneNumber = Long.valueOf(txtPhoneNumberParent.getText().trim());
                            String adress = txtAdressParent.getText().trim();
                            Long jmbg = Long.valueOf(txtJMBGParent.getText().trim());
                            Parent parent = new Parent(null, firstname, lastname, adress, phoneNumber, jmbg);
                            String firstnamec = txtFirstname.getText().trim();
                            String lastnamec = txtLastname.getText().trim();
                            Date date = dcBirthday.getDate();
                            Long jmbgc = Long.valueOf(txtJMBG.getText().trim());
                            Child child = new Child(null, firstnamec, lastnamec, date, parent, jmbgc);
                            Controller.getInstance().AddNewParentChild(child);
                            JOptionPane.showMessageDialog(this, "Sistem je zapamtio dete " + child.toString() + " i dodeljenog roditelja/staratelja " + child.getParent().toString(), "Obavestenje", JOptionPane.INFORMATION_MESSAGE);
                            setForm();
                        } catch (Exception ex) {
                            JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti dete i dodeljenog roditelja/staratelja.", "Upozorenje", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti dete i dodeljenog roditelja/staratelja \n" + ex.getMessage(), "Upozorenje", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                saveChild(childParent);
            }

        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtFirstnameParentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFirstnameParentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstnameParentActionPerformed

    private void txtLastnameParentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLastnameParentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastnameParentActionPerformed

    private void txtAdressParentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAdressParentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAdressParentActionPerformed

    private void txtPhoneNumberParentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneNumberParentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhoneNumberParentActionPerformed

    private void cbCreateNewParentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCreateNewParentActionPerformed

    }//GEN-LAST:event_cbCreateNewParentActionPerformed

    private void cbCreateNewParentStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cbCreateNewParentStateChanged
        if (!cbCreateNewParent.isSelected()) {
            txtAdressParent.setEnabled(false);
            txtFirstnameParent.setEnabled(false);
            txtLastnameParent.setEnabled(false);
            txtPhoneNumberParent.setEnabled(false);
            btnSearch.setVisible(true);
        } else {
            txtAdressParent.setEnabled(true);
            txtFirstnameParent.setEnabled(true);
            txtLastnameParent.setEnabled(true);
            txtPhoneNumberParent.setEnabled(true);
            btnSearch.setVisible(false);
        }
    }//GEN-LAST:event_cbCreateNewParentStateChanged

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed

        try {
            Long jmbg = Long.valueOf(txtJMBGParent.getText().trim());
            try {
                childParent.setJmbg(jmbg);
                childParent = Controller.getInstance().getParent(childParent);
                txtJMBGParent.setText(childParent.getJmbg().toString());
                txtAdressParent.setText(childParent.getAdress());
                txtFirstnameParent.setText(childParent.getFirstname());
                txtLastnameParent.setText(childParent.getLastname());
                txtPhoneNumberParent.setText(childParent.getPhoneNumber().toString());

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Sistem ne moze da nadje roditelja/staratelja po zadatoj vrednosti.", "Upozorenje", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da nadje roditelja/staratelja po zadatoj vrednosti.", "Upozorenje", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtJMBGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJMBGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJMBGActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JCheckBox cbCreateNewParent;
    private com.toedter.calendar.JDateChooser dcBirthday;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtAdressParent;
    private javax.swing.JTextField txtFirstname;
    private javax.swing.JTextField txtFirstnameParent;
    private javax.swing.JTextField txtJMBG;
    private javax.swing.JTextField txtJMBGParent;
    private javax.swing.JTextField txtLastname;
    private javax.swing.JTextField txtLastnameParent;
    private javax.swing.JTextField txtPhoneNumberParent;
    // End of variables declaration//GEN-END:variables

    private boolean validationChild(String firstname, String lastname, Date birthday, String JMBG) throws Exception {

        if (firstname.isEmpty() || lastname.isEmpty() || birthday == null) {
            throw new Exception("Nevalidan unos, odredjena polja su prazna.");

        }
        for (int i = 0; i < firstname.length(); i++) {
            if (!Character.isLetter(firstname.charAt(i)) && firstname.charAt(i) != ' ') {
                throw new Exception("Nevalidan unos, ime se moze sastojati iskljucivo od slova.");
            }
        }
        for (int i = 0; i < lastname.length(); i++) {
            if (!Character.isLetter(lastname.charAt(i)) && lastname.charAt(i) != ' ') {
                throw new Exception("Nevalidan unos, prezime se moze sastojati iskljucivo od slova.");
            }
        }
        for (int i = 0; i < JMBG.length(); i++) {
            if (!Character.isDigit(JMBG.charAt(i))) {
                throw new Exception("Nevalidan unos, JMBG se moze sastojati iskljucivo od brojeva.");
            }
        }
        if (firstname.length() > 30 || lastname.length() > 30) {
            throw new Exception("Nevalidan unos, maksimalan broj karaktera za ime i prezime je 30.");
        }
        if (JMBG.length() != 13) {
            throw new Exception("Nevalidan unos, JMBG mora imati tacno 13 cifara.");
        }
        return true;
    }

    private boolean validationParent(String firstname, String lastname, String phoneNumber, String adress, String jmbg) throws Exception {
        if (firstname.isEmpty() || lastname.isEmpty() || phoneNumber.isEmpty() || adress.isEmpty() || jmbg.isEmpty()) {
            throw new Exception("Nevalidan unos, odredjena polja su prazna.");
        }
        for (int i = 0; i < jmbg.length(); i++) {
            if (!Character.isDigit(jmbg.charAt(i))) {
                throw new Exception("Nevalidan unos, JMBG se moze sastojati iskljucivo od brojeva.");
            }
        }
        for (int i = 0; i < firstname.length(); i++) {
            if (!Character.isLetter(firstname.charAt(i)) && firstname.charAt(i) != ' ') {
                throw new Exception("Nevalidan unos, ime se moze sastojati iskljucivo od slova.");
            }
        }
        for (int i = 0; i < lastname.length(); i++) {
            if (!Character.isLetter(lastname.charAt(i)) && lastname.charAt(i) != ' ') {
                throw new Exception("Nevalidan unos, prezime se moze sastojati iskljucivo od slova.");
            }
        }
        for (int i = 0; i < phoneNumber.length(); i++) {
            if (!Character.isDigit(phoneNumber.charAt(i))) {
                throw new Exception("Nevalidan unos, broj telefona se moze sastojati iskljucivo od brojeva.");
            }
        }
        if (firstname.length() > 30 || lastname.length() > 30) {
            throw new Exception("Nevalidan unos, maksimalan broj karaktera za ime i prezime je 30.");
        }
        if (jmbg.length() != 13) {
            throw new Exception("Nevalidan unos, JMBG mora imati tacno 13 cifara.");
        }
        if (adress.length() > 40) {
            throw new Exception("Nevalidan unos, maksimalan broj karaktera za adresu je 40.");
        }
        return true;
    }
//
//    private Parent saveParent(Parent parent) {
//        try {
//            if (validationParent(txtFirstnameParent.getText().trim(), txtLastnameParent.getText().trim(), txtPhoneNumberParent.getText().trim(), txtAdressParent.getText().trim(), txtJMBGParent.getText().trim())) {
//                try {
//                    String firstname = txtFirstnameParent.getText().trim();
//                    String lastname = txtLastnameParent.getText().trim();
//                    Long phoneNumber = Long.valueOf(txtPhoneNumberParent.getText().trim());
//                    String adress = txtAdressParent.getText().trim();
//                    Long jmbg = Long.valueOf(txtJMBGParent.getText().trim());
//                    parent = new Parent(null, firstname, lastname, adress, phoneNumber, jmbg);
//                    Controller.getInstance().addNewParent(parent);
//                    JOptionPane.showMessageDialog(this, "Sistem je zapamtio roditelja/staratelja [" + parent.getId() + "] " + parent.toString(), "Obavestenje", JOptionPane.INFORMATION_MESSAGE);
//                    setForm();
//                    return parent;
//                } catch (Exception ex) {
//                    JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti roditelja/staratelja.", "Upozorenje", JOptionPane.ERROR_MESSAGE);
//                }
//            }
//        } catch (Exception ex) {
//            JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti roditelja/staratelja \n" + ex.getMessage(), "Upozorenje", JOptionPane.ERROR_MESSAGE);
//        }
//        return null;
//    }
//

    private void saveChild(Parent parent) {
        try {
            if (validationChild(txtFirstname.getText().trim(), txtLastname.getText().trim(), dcBirthday.getDate(), txtJMBG.getText().trim())) {
                try {
                    String firstname = txtFirstname.getText().trim();
                    String lastname = txtLastname.getText().trim();
                    Date date = dcBirthday.getDate();
                    Long jmbg = Long.valueOf(txtJMBG.getText().trim());
                    Child child = new Child(null, firstname, lastname, date, parent, jmbg);
                    Controller.getInstance().addNewChild(child);
                    JOptionPane.showMessageDialog(this, "Sistem je zapamtio dete [" + child.getId() + "] " + child.toString(), "Obavestenje", JOptionPane.INFORMATION_MESSAGE);
                    setForm();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti dete.", "Upozorenje", JOptionPane.ERROR_MESSAGE);
                }

            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti dete. \n" + ex.getMessage(), "Upozorenje", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void setForm() {
        dcBirthday.setDate(null);
        txtFirstname.setText(null);
        txtLastname.setText(null);
        txtJMBG.setText(null);
        txtAdressParent.setText(null);
        txtFirstnameParent.setText(null);
        txtLastnameParent.setText(null);
        txtPhoneNumberParent.setText(null);
        txtJMBGParent.setText(null);
    }

    private void prepareForm() {
        txtAdressParent.setEnabled(false);
        txtFirstnameParent.setEnabled(false);
        txtLastnameParent.setEnabled(false);
        txtPhoneNumberParent.setEnabled(false);
    }
}
