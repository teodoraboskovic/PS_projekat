/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view.form;

import view.form.util.Mode;
import domain.OptionalProgram;
import domain.Parent;
import java.awt.Rectangle;
import java.io.IOException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import view.components.OptionalProgramsTableModel;
import uicontroller.Controller;

/**
 *
 * @author PC
 */
public class AddNewOptionalProgramForm extends javax.swing.JDialog {

    private int mode;
    private OptionalProgram optionalProgram;
    private JTable tblOptionalPrograms;

    /**
     * Creates new form AddNewParentForm
     */
    public AddNewOptionalProgramForm(java.awt.Frame parent, boolean modal, int mode) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        this.mode = mode;
        fillCombobox();
    }

    public AddNewOptionalProgramForm(java.awt.Frame parent, boolean modal, OptionalProgram optionalProgram, JTable tblOptionalPrograms, int mode) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        this.optionalProgram = optionalProgram;
        this.tblOptionalPrograms = tblOptionalPrograms;
        this.mode = mode;
        prepareFields();
        fillCombobox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        txtDifficultyLevel = new javax.swing.JSpinner();
        cbAge = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Izborni program");

        jLabel1.setText("Naziv:");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        jLabel2.setText("Predvidjeni uzrast:");

        jLabel3.setText("Nivo tezine:");

        btnSave.setText("Sacuvaj");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setText("Otkazi");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        txtDifficultyLevel.setModel(new javax.swing.SpinnerNumberModel(1, 1, 3, 1));

        cbAge.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancel))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addComponent(txtDifficultyLevel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbAge, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(6, 6, 6))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDifficultyLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (mode == Mode.ADD) {
            int answer = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da sacuvate izborni program u bazi?", "Upozorenje", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (answer == JOptionPane.YES_OPTION) {
                try {
                    if (validation()) {
                        try {
                            String name = txtName.getText().trim();
                            String age = (String) cbAge.getSelectedItem();
                            int difficultyLevel = (int) txtDifficultyLevel.getValue();
                            OptionalProgram optionalProgram = new OptionalProgram(null, name, age, difficultyLevel);
                            Controller.getInstance().addNewOptionalProgram(optionalProgram);
                            JOptionPane.showMessageDialog(this, "Sistem je zapamtio izborni program [" + optionalProgram.getId() + "] " + optionalProgram.toString(), "Obavestenje", JOptionPane.INFORMATION_MESSAGE);
                        } catch (Exception ex) {
                            JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti izborni program.", "Upozorenje", JOptionPane.ERROR_MESSAGE);
                        }
                        txtDifficultyLevel.setValue(1);
                        txtName.setText(null);
                        cbAge.setSelectedIndex(-1);
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti izborni program. \n"+ex.getMessage(), "Upozorenje", JOptionPane.ERROR_MESSAGE);

                }

            }
        }
        if (mode == Mode.EDIT) {
            try {
                if (validation()) {
                    int answer = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da izmenite izborni program " + optionalProgram.getName() + "?", "Upozorenje", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                    if (answer == JOptionPane.YES_OPTION) {
                        OptionalProgram editedOptionalProgram = new OptionalProgram(optionalProgram.getId(), txtName.getText().trim(), (String) cbAge.getSelectedItem(), (int) txtDifficultyLevel.getValue());
                        OptionalProgramsTableModel optm = (OptionalProgramsTableModel) tblOptionalPrograms.getModel();
                        optm.refreshTable(editedOptionalProgram);
                        dispose();
                    }
                } 
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Upozorenje", JOptionPane.ERROR_MESSAGE);
            }
        }
        if (mode == Mode.DELETE) {
            int answer = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da obrisete izborni program " + optionalProgram.getName() + "?", "Upozorenje", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (answer == JOptionPane.YES_OPTION) {
                OptionalProgramsTableModel optm = (OptionalProgramsTableModel) tblOptionalPrograms.getModel();
                optm.removeFromTable(optionalProgram);
                dispose();
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cbAge;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSpinner txtDifficultyLevel;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables

    private boolean validation() throws Exception {
        String name = txtName.getText().trim();
        if (name.isEmpty() || txtDifficultyLevel.getValue() == null || cbAge.getSelectedItem() == null) {
            throw new Exception("Nevalidan unos, odredjena polja su prazna.");
        }
        if (name.length() > 30) {
            throw new Exception("Nevalidan unos, maksimalan broj karaktera za naziv izbornog programa je 30.");
        }
        return true;
    }

    private void fillCombobox() {
        cbAge.removeAllItems();
        cbAge.addItem("2");
        cbAge.addItem("3-4");
        cbAge.addItem("4-5");
        cbAge.addItem("5-6");
        if (mode == Mode.ADD) {
            cbAge.setSelectedIndex(-1);
        }
        if (mode == Mode.EDIT || mode == Mode.DELETE) {
            cbAge.setSelectedItem(optionalProgram.getAge());
        }

    }

    private void prepareFields() {
        txtName.setText(optionalProgram.getName());
        txtDifficultyLevel.setValue(optionalProgram.getDifficultyLevel());
        if (mode == Mode.DELETE) {
            txtDifficultyLevel.setEnabled(false);
            txtName.setEnabled(false);
            cbAge.setEnabled(false);
            btnSave.setText("Obrisi");
        }
        if (mode == Mode.EDIT) {
            btnSave.setText("Sacuvaj");
        }
    }

}
