/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view.form;

import domain.Employer;
import view.form.util.Mode;
import domain.OptionalProgram;
import domain.Parent;
import java.awt.Rectangle;
import java.io.IOException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import view.components.EmployersTableModel;
import thread.SSSExplanationThread;
import uicontroller.Controller;

/**
 *
 * @author PC
 */
public class AddNewEmployerForm extends javax.swing.JDialog {

    private int mode;
    private Employer employer;
    private JTable tblEmployers;

    /**
     * Creates new form AddNewParentForm
     */
    public AddNewEmployerForm(java.awt.Frame parent, boolean modal, int mode) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        this.mode = mode;
        setResizable(false);
        fillComboboxOptionalProgram();
        setSSSExplanation();

    }

    public AddNewEmployerForm(java.awt.Frame parent, boolean modal, Employer employer, JTable tblEmployers, int mode) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        this.employer = employer;
        this.tblEmployers = tblEmployers;
        this.mode = mode;
        setResizable(false);
        prepareFields();
        fillComboboxOptionalProgram();
        setSSSExplanation();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtFirstname = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtLastname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtAdress = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        cbOptionalProgram = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtPhoneNumber = new javax.swing.JTextField();
        txtSSS = new javax.swing.JSpinner();
        txtSSSExplanation = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Zaposleni");

        jLabel1.setText("Ime:");

        txtFirstname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFirstnameActionPerformed(evt);
            }
        });

        jLabel2.setText("Prezime:");

        txtLastname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLastnameActionPerformed(evt);
            }
        });

        jLabel3.setText("Adresa:");

        txtAdress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAdressActionPerformed(evt);
            }
        });

        jLabel4.setText("Izborni program:");

        btnSave.setText("Sacuvaj");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setText("Otkazi");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        cbOptionalProgram.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setText("Broj telefona:");

        jLabel6.setText("SSS:");

        txtSSS.setModel(new javax.swing.SpinnerListModel(new String[] {"I", "II", "III", "IV", "V", "VI", "VI-1", "VI-2", "VII-1", "VII-1a", "VII-1b", "VII-2", "VIII"}));
        txtSSS.setBorder(null);

        txtSSSExplanation.setEditable(false);
        txtSSSExplanation.setText("jTextField1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancel))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFirstname, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtLastname, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtAdress, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtPhoneNumber, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtSSS, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSSSExplanation))
                            .addComponent(cbOptionalProgram, 0, 375, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtLastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtAdress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtSSS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSSSExplanation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbOptionalProgram, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtAdressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAdressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAdressActionPerformed

    private void txtLastnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLastnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastnameActionPerformed

    private void txtFirstnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFirstnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstnameActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (mode == Mode.ADD) {
            int answer = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da sacuvate zaposlenog u bazi?", "Upozorenje", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (answer == JOptionPane.YES_OPTION) {
                try {
                    if (validation()) {
                        try {
                            String firstname = txtFirstname.getText().trim();
                            String lastname = txtLastname.getText().trim();
                            Long phoneNumber = Long.valueOf(txtPhoneNumber.getText());
                            String sss = (String) txtSSS.getValue();
                            String adress = txtAdress.getText();
                            OptionalProgram optionalProgram;
                            optionalProgram = (OptionalProgram) cbOptionalProgram.getSelectedItem();
                            Employer employer = new Employer(null, firstname, lastname, adress, phoneNumber, sss, optionalProgram);
                            Controller.getInstance().addNewEmployer(employer);
                            JOptionPane.showMessageDialog(this, "Sistem je zapamtio zaposlenog [" + employer.getId() + "] " + employer.toString(), "Obavestenje", JOptionPane.INFORMATION_MESSAGE);
                            txtAdress.setText(null);
                            txtFirstname.setText(null);
                            txtLastname.setText(null);
                            txtPhoneNumber.setText(null);
                            cbOptionalProgram.setSelectedIndex(-1);
                        } catch (Exception ex) {
                            JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti zaposlenog.", "Upozorenje", JOptionPane.ERROR_MESSAGE);
                        }

                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti zaposlenog. \n" + ex.getMessage(), "Upozorenje", JOptionPane.ERROR_MESSAGE);
                }

            }
        }
        if (mode == Mode.EDIT) {
            try {
                if (validation()) {
                    int answer = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da izmenite zaposlenog " + employer.getFirstname() + " " + employer.getLastname() + "?", "Upozorenje", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                    if (answer == JOptionPane.YES_OPTION) {
                        Employer editedEmployer = new Employer(employer.getId(), txtFirstname.getText().trim(), txtLastname.getText().trim(), txtAdress.getText().trim(), Long.valueOf(txtPhoneNumber.getText().trim()), (String) txtSSS.getValue(), (OptionalProgram) cbOptionalProgram.getSelectedItem());
                        EmployersTableModel etm = (EmployersTableModel) tblEmployers.getModel();
                        etm.refreshTable(editedEmployer);
                        dispose();
                    }
                } 
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Upozorenje", JOptionPane.ERROR_MESSAGE);
            }
        }
        if (mode == Mode.DELETE) {
            int answer = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da obrisete zaposlenog " + employer.getFirstname() + " " + employer.getLastname() + "?", "Upozorenje", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (answer == JOptionPane.YES_OPTION) {
                EmployersTableModel etm = (EmployersTableModel) tblEmployers.getModel();
                etm.removeFromTable(employer);
                dispose();
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<Object> cbOptionalProgram;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField txtAdress;
    private javax.swing.JTextField txtFirstname;
    private javax.swing.JTextField txtLastname;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JSpinner txtSSS;
    private javax.swing.JTextField txtSSSExplanation;
    // End of variables declaration//GEN-END:variables

    private boolean validation() throws Exception {
        String firstname = txtFirstname.getText().trim();
        String lastname = txtLastname.getText().trim();
        String adress = txtAdress.getText().trim();
        String phoneNumber = txtPhoneNumber.getText().trim();
        if (firstname.isEmpty() || adress.isEmpty() || lastname.isEmpty() || phoneNumber.isEmpty() || txtSSS.getValue() == null || cbOptionalProgram.getSelectedItem() == null) {
            throw new Exception("Nevalidan unos, odredjena polja su prazna.");
        }

        for (int i = 0; i < firstname.length(); i++) {
            if (!Character.isLetter(firstname.charAt(i)) && firstname.charAt(i) != ' ') {
                throw new Exception("Nevalidan unos, ime se moze sastojati iskljucivo od slova.");
            }
        }
        for (int i = 0; i < lastname.length(); i++) {
            if (!Character.isLetter(lastname.charAt(i)) && lastname.charAt(i) != ' ') {
                throw new Exception("Nevalidan unos, prezime se moze sastojati iskljucivo od slova.");
            }
        }
        for (int i = 0; i < phoneNumber.length(); i++) {
            if (!Character.isDigit(phoneNumber.charAt(i))) {
                throw new Exception("Nevalidan unos, broj telefona se moze sastojati iskljucivo od brojeva.");
            }
        }
        if (firstname.length() > 30 || lastname.length() > 30) {
            throw new Exception("Nevalidan unos, maksimalan broj karaktera za ime i prezime je 30.");
        }
        if (adress.length() > 40) {
            throw new Exception("Nevalidan unos, maksimalan broj karaktera za adresu je 40.");
        }
        return true;
    }

    private void fillComboboxOptionalProgram() {
        cbOptionalProgram.removeAllItems();
        List<OptionalProgram> optionalPrograms = new ArrayList<>();
        try {
            optionalPrograms = Controller.getInstance().getAllOptionalPrograms();
            for (OptionalProgram optionalProgram : optionalPrograms) {
                cbOptionalProgram.addItem(optionalProgram);
            }
            if (mode == Mode.EDIT || mode == Mode.DELETE) {
                cbOptionalProgram.setSelectedItem(employer.getOptionalProgram());
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            System.out.println("Greska pri ucitavanju liste izbornih programa");
        }
        if (mode == Mode.ADD) {
            cbOptionalProgram.setSelectedIndex(-1);
        }
    }

    private void setSSSExplanation() {
        if (mode == Mode.EDIT || mode == Mode.DELETE) {
            txtSSS.setValue(employer.getSss());
        }
        SSSExplanationThread et = new SSSExplanationThread(txtSSSExplanation, txtSSS);
        Thread thread = new Thread(et);
        thread.start();
    }

    private void prepareFields() {
        txtFirstname.setText(employer.getFirstname());
        txtLastname.setText(employer.getLastname());
        txtAdress.setText(employer.getAdress());
        txtPhoneNumber.setText(employer.getPhoneNumber().toString());
        if (mode == Mode.DELETE) {
            txtAdress.setEnabled(false);
            txtFirstname.setEnabled(false);
            txtLastname.setEnabled(false);
            txtPhoneNumber.setEnabled(false);
            txtSSS.setEnabled(false);
            cbOptionalProgram.setEnabled(false);
            btnSave.setText("Obrisi");
        }
        if (mode == Mode.EDIT) {
            btnSave.setText("Sacuvaj");
        }
    }

}
