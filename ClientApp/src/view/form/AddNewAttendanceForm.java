/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view.form;

import domain.Attendance;
import domain.Child;
import view.form.util.Mode;
import domain.OptionalProgram;
import java.awt.Rectangle;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import view.components.AttendancesTableModel;
import view.components.ChildrenTableModel;
import view.components.SelectChildTableModel;
import uicontroller.Controller;

/**
 *
 * @author PC
 */
public class AddNewAttendanceForm extends javax.swing.JDialog {

    private OptionalProgram optionalProgram;
    private List<Attendance> attendances;

    /**
     * Creates new form AddNewAttendance
     */
    public AddNewAttendanceForm(java.awt.Frame parent, boolean modal, OptionalProgram optionalProgram) {
        super(parent, modal);
        initComponents();
        this.optionalProgram = optionalProgram;
        setLocationRelativeTo(null);
        setResizable(false);
        filComboboxOptionalProgram();
        prepareTable();
        attendances = new ArrayList<>();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbOptionalProgram = new javax.swing.JComboBox<>();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        dcStartDate = new com.toedter.calendar.JDateChooser();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblChildren = new javax.swing.JTable();
        cbEditOptionalProgram = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAttendance = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnCreateNewChild = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pohadjanje");

        jLabel1.setText("Datum pocetka:");

        jLabel3.setText("Izborni program:");

        cbOptionalProgram.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbOptionalProgram.setEnabled(false);
        cbOptionalProgram.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbOptionalProgramActionPerformed(evt);
            }
        });

        btnSave.setText("Sacuvaj sva pohadjanja");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setText("Otkazi");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Deca"));

        tblChildren.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblChildren);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cbEditOptionalProgram.setText("Promeni izborni program");
        cbEditOptionalProgram.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cbEditOptionalProgramStateChanged(evt);
            }
        });
        cbEditOptionalProgram.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEditOptionalProgramActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Pohadjanja"));

        tblAttendance.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ime", "Prezime", "Jmbg", "Izborni program", "Datum upisa", "Datum ispisa"
            }
        ));
        jScrollPane2.setViewportView(tblAttendance);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        btnAdd.setText("Dodaj ");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setText("Obrisi");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnCreateNewChild.setText("Kreiraj novo dete");
        btnCreateNewChild.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateNewChildActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cbEditOptionalProgram)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3))
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbOptionalProgram, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(dcStartDate, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCancel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnCreateNewChild))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAdd)
                                    .addComponent(btnDelete))
                                .addGap(20, 20, 20)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnSave)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dcStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbOptionalProgram, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbEditOptionalProgram)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAdd)
                        .addGap(35, 35, 35)
                        .addComponent(btnDelete)
                        .addGap(176, 176, 176)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSave)
                            .addComponent(btnCancel))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(3, 3, 3)
                        .addComponent(btnCreateNewChild)
                        .addGap(35, 35, 35))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        int answer = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da sacuvate pohadjanje u bazi?", "Upozorenje", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (answer == JOptionPane.YES_OPTION) {
            try {
//                for (Attendance attendance : attendances) {
                    Controller.getInstance().addNewAttendance(attendances);
//                }
                JOptionPane.showMessageDialog(this, "Sistem je zapamtio pohadjanja.", "Obavestenje", JOptionPane.INFORMATION_MESSAGE);

            } catch (Exception ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti pohadjanja.", "Upozorenje", JOptionPane.ERROR_MESSAGE);
            }
        } 

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void cbEditOptionalProgramActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEditOptionalProgramActionPerformed

    }//GEN-LAST:event_cbEditOptionalProgramActionPerformed

    private void cbOptionalProgramActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbOptionalProgramActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbOptionalProgramActionPerformed

    private void cbEditOptionalProgramStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cbEditOptionalProgramStateChanged
        if (!cbEditOptionalProgram.isSelected()) {
            cbOptionalProgram.setEnabled(false);
        } else {
            cbOptionalProgram.setEnabled(true);
        }
    }//GEN-LAST:event_cbEditOptionalProgramStateChanged

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed

        if (tblChildren.getSelectedRowCount() != 1) {
            JOptionPane.showMessageDialog(this, "Morate selektovati tacno jedno dete", "Upozorenje", JOptionPane.INFORMATION_MESSAGE);
        } else {
            try {
                if (validation(dcStartDate.getDate(), (OptionalProgram) cbOptionalProgram.getSelectedItem())) {
                    Date startDate = dcStartDate.getDate();
                    OptionalProgram op = (OptionalProgram) cbOptionalProgram.getSelectedItem();
                    int selectedRow = tblChildren.getSelectedRow();
                    SelectChildTableModel sctb = (SelectChildTableModel) tblChildren.getModel();
                    Child child = sctb.getChild(selectedRow);
                    Attendance attendance = new Attendance(op, child, startDate, null);
                    if (!exist(attendance)) {
                        attendances.add(attendance);
                        AttendancesTableModel atm = new AttendancesTableModel(attendances);
                        tblAttendance.setModel(atm);
                    }else{
                        JOptionPane.showMessageDialog(this, "Pohadjanje je vec dodato", "Upozorenje", JOptionPane.ERROR_MESSAGE);
                    }
                    
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Upozorenje", JOptionPane.ERROR_MESSAGE);
            }

        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        Attendance attendance = new Attendance();
        int selectedRow = tblAttendance.getSelectedRow();
        if (tblAttendance.getSelectedRowCount() != 1) {
            JOptionPane.showMessageDialog(this, "Morate selektovati tacno jedno pohadjanje", "Upozorenje", JOptionPane.INFORMATION_MESSAGE);
        } else {
            AttendancesTableModel atm = (AttendancesTableModel) tblAttendance.getModel();
            attendance = atm.getAttendance(selectedRow);
            for (int i = 0; i < attendances.size(); i++) {
                if (attendance.getChild().getId().equals(attendances.get(i).getChild().getId())
                        && attendance.getOptionalProgram().getId().equals(attendances.get(i).getOptionalProgram().getId())) {
                    attendances.remove(i);
                }
            }
            atm.fireTableDataChanged();
        }


    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnCreateNewChildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateNewChildActionPerformed
        new AddNewChildParentForm(null, true).setVisible(true);
        prepareTable();
    }//GEN-LAST:event_btnCreateNewChildActionPerformed

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnCreateNewChild;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JCheckBox cbEditOptionalProgram;
    private javax.swing.JComboBox<Object> cbOptionalProgram;
    private com.toedter.calendar.JDateChooser dcStartDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblAttendance;
    private javax.swing.JTable tblChildren;
    // End of variables declaration//GEN-END:variables

    private void filComboboxOptionalProgram() {
        cbOptionalProgram.removeAllItems();
        List<OptionalProgram> optionalPrograms = new ArrayList<>();
        try {
            optionalPrograms = Controller.getInstance().getAllOptionalPrograms();
            for (OptionalProgram op : optionalPrograms) {
                cbOptionalProgram.addItem(op);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            System.out.println("Greska pri ucitavanju liste izbornih programa");
        }
        cbOptionalProgram.setSelectedItem(optionalProgram);
    }

    private boolean validation(Date date, OptionalProgram optionalProgram) throws Exception {
        if (date == null || optionalProgram == null) {
            throw new Exception("Nevalidan unos, odredjena polja su prazna.");
        }
        return true;
    }


    private void prepareTable() {
        try {
            List<Child> children = new ArrayList<>();
            children = Controller.getInstance().getAllChildren();
            SelectChildTableModel tm = new SelectChildTableModel(children);
            tblChildren.setModel(tm);
        } catch (IOException ex) {
            ex.printStackTrace();
            System.out.println("Greska pri ucitavanju liste dece");

        } catch (Exception ex) {
         ex.printStackTrace();
        }

    }

    private boolean exist(Attendance attendance) {
        for (int i = 0; i < attendances.size(); i++) {
            if (attendance.getChild().getId().equals(attendances.get(i).getChild().getId())
                    && attendance.getOptionalProgram().getId().equals(attendances.get(i).getOptionalProgram().getId())) {
                return true;
            }
        }return false;
    }
}
