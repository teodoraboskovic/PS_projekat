/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package domain;

import java.io.Serializable;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author PC
 */
public class Parent extends DomainObject implements Serializable {

    private Long id;
    private String firstname;
    private String lastname;
    private String adress;
    private Long phoneNumber;
    private Long jmbg;

    public Parent() {
    }

    public Parent(Long id, String firstname, String lastname, String adress, Long phoneNumber, Long jmbg) {
        this.id = id;
        this.firstname = firstname;
        this.lastname = lastname;
        this.adress = adress;
        this.phoneNumber = phoneNumber;
        this.jmbg = jmbg;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getFirstname() {
        return firstname;
    }

    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    public String getLastname() {
        return lastname;
    }

    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    public String getAdress() {
        return adress;
    }

    public void setAdress(String adress) {
        this.adress = adress;
    }

    public Long getPhoneNumber() {
        return phoneNumber;
    }

    public void setPhoneNumber(Long phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    public Long getJmbg() {
        return jmbg;
    }

    public void setJmbg(Long jmbg) {
        this.jmbg = jmbg;
    }

    @Override
    public String toString() {
        return firstname + " " + lastname + ", JMBG: " + jmbg;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Parent other = (Parent) obj;
        return Objects.equals(this.id, other.id);
    }

    @Override
    public String getTableName() {
        return "parent";
    }

    @Override
    public String getColumnsForAdd() {
        return "firstname,lastname,adress,phone_number,jmbg";
    }

    @Override
    public String getParamsForAdd() {
        return "?,?,?,?,?";
    }

    @Override
    public void setParamsForAdd(PreparedStatement ps, DomainObject domainObject) throws SQLException {
        Parent parent = (Parent) domainObject;
        ps.setString(1, parent.getFirstname());
        ps.setString(2, parent.getLastname());
        ps.setString(3, parent.getAdress());
        ps.setLong(4, parent.getPhoneNumber());
        ps.setLong(5, parent.getJmbg());
        int result = ps.executeUpdate();
    }

    @Override
    public void setAutogeneratedKey(long key) {
        setId(key);
        System.out.println("Vrednost primarnog kljuca je: " + key);
    }

    @Override
    public String getSelectValues() {
        if(jmbg==null){
            return "* FROM parent";
        }else{
            return "* FROM parent WHERE jmbg=\""+jmbg+"\"";
        }

    }

    @Override
    public DomainObject setValuesForGet(ResultSet rs) {
            Parent parent = new Parent();
            try {
                parent.setFirstname(rs.getString("firstname"));
                parent.setLastname(rs.getString("lastname"));
                parent.setId(rs.getLong("id"));
                parent.setAdress(rs.getString("adress"));
                parent.setPhoneNumber(rs.getLong("phone_number"));
                parent.setJmbg(rs.getLong("jmbg"));
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            return parent;
       
    }

    @Override
    public String getUpdateValues() {
        return "parent SET firstname=?, lastname=?, adress=?, phone_number=?, jmbg=? WHERE id=?";
    }

    @Override
    public void setValuesForEdit(PreparedStatement ps) {
        try {
            ps.setString(1, getFirstname());
            ps.setString(2, getLastname());
            ps.setString(3, getAdress());
            ps.setLong(4, getPhoneNumber());
            ps.setLong(5, getJmbg());
            ps.setLong(6, getId());
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    @Override
    public String getDeleteValues() {
        return "FROM parent WHERE id=?";
    }

    @Override
    public void setValuesForDelete(PreparedStatement ps) {
        try {
            ps.setLong(1, getId());
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

}
